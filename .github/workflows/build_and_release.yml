name: Build and Release

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
      shell: bash

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Build Executable on macOS
      if: runner.os == 'macOS'
      run: |
        pyinstaller --distpath dist SPEC/main_mac.spec

    - name: Build Executable on Windows
      if: runner.os == 'Windows'
      run: |
        pyinstaller --distpath dist SPEC/main_win.spec

    - name: Build Executable on Linux
      if: runner.os == 'Linux'
      run: |
        pyinstaller --distpath dist SPEC/main_linux.spec

    - name: List files in dist directory
      run:  cd dist 
            ls -R 
      shell: bash

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: executable
        path: dist
        if-no-files-found: warn